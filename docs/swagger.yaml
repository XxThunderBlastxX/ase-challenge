openapi: 3.0.3
info:
  title: Product Inventory Management API
  description: |
    A RESTful API service for managing product inventory with stock tracking and low-stock monitoring capabilities.

    Built with Go and Fiber framework, this API provides comprehensive product management operations including:
    - Product CRUD operations
    - Stock increment and decrement operations
    - Low stock monitoring with configurable thresholds per product
    - Comprehensive error handling and validation
  version: 0.1.0

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

tags:
  - name: Products
    description: Product management operations
  - name: Stock
    description: Stock management operations
  - name: System
    description: System and maintenance operations

paths:
  /products:
    get:
      tags:
        - Products
      summary: Get all products
      description: |
        Retrieve all products from the inventory. Supports filtering for low-stock products.

        When `low-stock=true` is provided, returns only products where `stock_quantity <= low_stock_threshold`.
      parameters:
        - name: low-stock
          in: query
          description: Filter products with low stock
          required: false
          schema:
            type: string
            enum: [true, false]
          example: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductListResponse"
              examples:
                all_products:
                  summary: All products
                  value:
                    success: true
                    message: "Products retrieved successfully"
                    data:
                      - id: "550e8400-e29b-41d4-a716-446655440000"
                        name: "Wireless Headphones"
                        description: "High-quality wireless headphones"
                        stock_quantity: 50
                        low_stock_threshold: 10
                        created_at: "2024-01-15T10:30:00Z"
                        updated_at: "2024-01-15T10:30:00Z"
                        deleted_at: null
                low_stock_only:
                  summary: Low stock products only
                  value:
                    success: true
                    message: "Products retrieved successfully"
                    data:
                      - id: "550e8400-e29b-41d4-a716-446655440001"
                        name: "Gaming Mouse"
                        description: "RGB gaming mouse"
                        stock_quantity: 3
                        low_stock_threshold: 5
                        created_at: "2024-01-15T10:30:00Z"
                        updated_at: "2024-01-15T10:30:00Z"
                        deleted_at: null
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      tags:
        - Products
      summary: Create a new product
      description: Create a new product in the inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductRequest"
            example:
              name: "Wireless Headphones"
              description: "High-quality wireless headphones with noise cancellation"
              stock_quantity: 50
              low_stock_threshold: 10
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
              example:
                success: true
                message: "Product created successfully"
                data:
                  id: "550e8400-e29b-41d4-a716-446655440000"
                  name: "Wireless Headphones"
                  description: "High-quality wireless headphones with noise cancellation"
                  stock_quantity: 50
                  low_stock_threshold: 10
                  created_at: "2024-01-15T10:30:00Z"
                  updated_at: "2024-01-15T10:30:00Z"
                  deleted_at: null
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /products/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Retrieve a specific product by its ID
      parameters:
        - $ref: "#/components/parameters/ProductId"
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/ProductNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

    put:
      tags:
        - Products
      summary: Update product
      description: Update an existing product's information
      parameters:
        - $ref: "#/components/parameters/ProductId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductRequest"
            example:
              name: "Wireless Headphones Pro"
              description: "Premium wireless headphones with advanced noise cancellation"
              stock_quantity: 75
              low_stock_threshold: 15
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/ProductNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

    delete:
      tags:
        - Products
      summary: Delete product
      description: Delete a product from the inventory
      parameters:
        - $ref: "#/components/parameters/ProductId"
      responses:
        "204":
          description: Product deleted successfully
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/ProductNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /products/{id}/increment-stock:
    post:
      tags:
        - Stock
      summary: Increment product stock
      description: Increase the stock quantity of a product
      parameters:
        - $ref: "#/components/parameters/ProductId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockIncrementRequest"
            example:
              stock_increment: 25
      responses:
        "200":
          description: Stock incremented successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockOperationResponse"
              example:
                success: true
                message: "Stock incremented successfully"
                data:
                  message: "Stock incremented successfully"
                  product:
                    id: "550e8400-e29b-41d4-a716-446655440000"
                    name: "Wireless Headphones"
                    description: "High-quality wireless headphones"
                    stock_quantity: 75
                    low_stock_threshold: 10
                    created_at: "2024-01-15T10:30:00Z"
                    updated_at: "2024-01-15T11:45:00Z"
                    deleted_at: null
                  increment_amount: 25
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/ProductNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /products/{id}/decrement-stock:
    post:
      tags:
        - Stock
      summary: Decrement product stock
      description: Decrease the stock quantity of a product
      parameters:
        - $ref: "#/components/parameters/ProductId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockDecrementRequest"
            example:
              stock_decrement: 5
      responses:
        "200":
          description: Stock decremented successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockOperationResponse"
              example:
                success: true
                message: "Stock decremented successfully"
                data:
                  message: "Stock decremented successfully"
                  product:
                    id: "550e8400-e29b-41d4-a716-446655440000"
                    name: "Wireless Headphones"
                    description: "High-quality wireless headphones"
                    stock_quantity: 70
                    low_stock_threshold: 10
                    created_at: "2024-01-15T10:30:00Z"
                    updated_at: "2024-01-15T12:15:00Z"
                    deleted_at: null
                  decrement_amount: 5
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/ProductNotFound"
        "409":
          $ref: "#/components/responses/InsufficientStock"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /migrate:
    get:
      tags:
        - System
      summary: Run database migrations
      description: Execute database schema migrations
      responses:
        "200":
          description: Migration completed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                success: true
                message: "Database migrated successfully"
                data: "Database migrated successfully"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  parameters:
    ProductId:
      name: id
      in: path
      required: true
      description: Product UUID
      schema:
        type: string
        format: uuid
      example: "550e8400-e29b-41d4-a716-446655440000"

  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - stock_quantity
        - low_stock_threshold
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the product
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          description: Product name
          example: "Wireless Headphones"
          maxLength: 255
        description:
          type: string
          description: Product description
          example: "High-quality wireless headphones with noise cancellation"
          maxLength: 1000
        stock_quantity:
          type: integer
          minimum: 0
          description: Current stock quantity
          example: 50
        low_stock_threshold:
          type: integer
          minimum: 0
          description: Threshold below which the product is considered low stock
          example: 10
        created_at:
          type: string
          format: date-time
          description: Product creation timestamp
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Product last update timestamp
          example: "2024-01-15T10:30:00Z"
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Product deletion timestamp (null if not deleted)
          example: null

    CreateProductRequest:
      type: object
      required:
        - name
        - stock_quantity
        - low_stock_threshold
      properties:
        name:
          type: string
          description: Product name
          example: "Wireless Headphones"
          maxLength: 255
        description:
          type: string
          description: Product description
          example: "High-quality wireless headphones with noise cancellation"
          maxLength: 1000
        stock_quantity:
          type: integer
          minimum: 0
          description: Initial stock quantity
          example: 50
        low_stock_threshold:
          type: integer
          minimum: 0
          description: Low stock threshold
          example: 10

    UpdateProductRequest:
      type: object
      required:
        - name
        - stock_quantity
        - low_stock_threshold
      properties:
        name:
          type: string
          description: Product name
          example: "Wireless Headphones Pro"
          maxLength: 255
        description:
          type: string
          description: Product description
          example: "Premium wireless headphones with advanced noise cancellation"
          maxLength: 1000
        stock_quantity:
          type: integer
          minimum: 0
          description: Current stock quantity
          example: 75
        low_stock_threshold:
          type: integer
          minimum: 0
          description: Low stock threshold
          example: 15

    StockIncrementRequest:
      type: object
      required:
        - stock_increment
      properties:
        stock_increment:
          type: integer
          minimum: 1
          description: Amount to increment stock by
          example: 25

    StockDecrementRequest:
      type: object
      required:
        - stock_decrement
      properties:
        stock_decrement:
          type: integer
          minimum: 1
          description: Amount to decrement stock by
          example: 5

    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
        message:
          type: string
          description: Human-readable message about the operation

    SuccessResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            data:
              description: Response data
              example: "Operation completed successfully"

    ProductResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/Product"

    ProductListResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Product"

    StockOperationResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                  example: "Stock updated successfully"
                product:
                  $ref: "#/components/schemas/Product"
                increment_amount:
                  type: integer
                  description: Amount incremented (only in increment response)
                  example: 25
                decrement_amount:
                  type: integer
                  description: Amount decremented (only in decrement response)
                  example: 5

    ErrorResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              description: Error code for programmatic handling
              enum:
                - VALIDATION_ERROR
                - INVALID_INPUT
                - MISSING_REQUIRED_DATA
                - INVALID_FORMAT
                - NOT_FOUND
                - PRODUCT_NOT_FOUND
                - USER_NOT_FOUND
                - BUSINESS_LOGIC_ERROR
                - INSUFFICIENT_STOCK
                - DUPLICATE_ENTRY
                - DATABASE_ERROR
                - CONNECTION_ERROR
                - MIGRATION_ERROR
                - INTERNAL_SERVER_ERROR
                - UNKNOWN_ERROR
                - UNAUTHORIZED
                - FORBIDDEN
                - TOKEN_EXPIRED
            details:
              description: Additional error details
              oneOf:
                - type: object
                  properties:
                    available:
                      type: integer
                      description: Available stock quantity
                    required:
                      type: integer
                      description: Required stock quantity
                - type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                        description: Field name with validation error
                      message:
                        type: string
                        description: Validation error message
                      value:
                        description: Invalid value provided
                - type: string
                  description: Additional error information

  responses:
    BadRequest:
      description: Bad request - invalid input or missing required fields
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            missing_field:
              summary: Missing required field
              value:
                success: false
                message: "Missing required field: name"
                code: "MISSING_REQUIRED_DATA"
            invalid_input:
              summary: Invalid input
              value:
                success: false
                message: "stock_increment must be greater than 0"
                code: "INVALID_INPUT"
            validation_error:
              summary: Validation error
              value:
                success: false
                message: "Validation failed"
                code: "VALIDATION_ERROR"
                details:
                  - field: "stock_quantity"
                    message: "must be non-negative"
                    value: -5

    ProductNotFound:
      description: Product not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            success: false
            message: "Product with ID 550e8400-e29b-41d4-a716-446655440000 not found"
            code: "PRODUCT_NOT_FOUND"

    InsufficientStock:
      description: Insufficient stock for the requested operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            success: false
            message: "Insufficient stock. Available: 3, Required: 5"
            code: "INSUFFICIENT_STOCK"
            details:
              available: 3
              required: 5

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            database_error:
              summary: Database error
              value:
                success: false
                message: "Failed to retrieve products: database connection failed"
                code: "DATABASE_ERROR"
            internal_error:
              summary: Internal server error
              value:
                success: false
                message: "An internal server error occurred"
                code: "INTERNAL_SERVER_ERROR"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication (not currently implemented)
# Uncomment when authentication is implemented
# security:
#   - BearerAuth: []
